name: Build
on: [pull_request, push]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update
      - run: sudo apt-get install -y build-essential gettext cmake valac libgee-0.8-dev libsqlite3-dev libgtk-3-dev libnotify-dev libgpgme-dev libsoup2.4-dev libgcrypt20-dev libqrencode-dev libgspell-1-dev
      - run: ./configure --with-tests --with-libsignal-in-tree
      - run: make
      - run: build/xmpp-vala-test
      - run: build/signal-protocol-vala-test

  Appimage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gettext cmake valac libgee-0.8-dev libsqlite3-dev libgtk-3-dev libnotify-dev libgpgme-dev libsoup2.4-dev libgcrypt20-dev libqrencode-dev libgspell-1-dev
          
      - name: Prepare AppImage build
        run: |
          sudo apt-get install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace
          sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
          sudo chmod +x /usr/local/bin/appimagetool
          sudo pip3 install appimage-builder
    
      - name: Build AppImage
        run: appimage-builder
      #- name: Build Appimage
      #  uses: AppImageCrafters/build-appimage@master
      #  with:
      #    recipe: "./AppImageBuilder.yml"
          
      - name: Save AppImage
        uses: actions/upload-artifact@master
        with:
          name: Dino_Appimage
          path: ./*.AppImage
